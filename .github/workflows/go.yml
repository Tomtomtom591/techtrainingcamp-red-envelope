name: Go
on:
  push:
    branches: [ dev ]
  workflow_dispatch:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
env:
  GOPROXY: "https://proxy.golang.org"

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos


          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
            mysql database: 'test'
            mysql root password: '123456'

      - name: Setup Redis
        uses: shogo82148/actions-setup-redis@v1

      - name: Start Kafka
        uses: 280780363/kafka-action@v1.0
        with:
          kafka version: "latest" # Optional, kafka version
          zookeeper version: "latest" # Optional, zookeeper version
          kafka port: 9092 # Optional, kafka port
          zookeeper port: 2181 # Optional, zookeeper port
          auto create topic: "true" # Optional, auto create kafka topic

      - name: Run tests
        run:  |
          go test -v  ./...
